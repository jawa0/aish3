{
  "version": "0.2",
  "saved_at_utc": "2024-02-17T17:24:28.582313+00:00",
  "saved_at_local": "2024-02-17T12:24:28.582313-05:00",
  "gui": {
    "class": "GUI",
    "content": {
      "class": "GUIContainer",
      "uid": "796502f7-43b0-408f-8a3e-1fcf3093c681",
      "bounding_rect": [
        13,
        -67,
        1239,
        719
      ],
      "layout": null,
      "name": "GUI Content Root",
      "inset": [
        0,
        0
      ],
      "children": [
        {
          "class": "Label",
          "uid": "f9b64385-d5f7-456f-b133-625151f9da48",
          "bounding_rect": [
            1,
            73,
            150,
            30
          ],
          "text": "Agent Chat",
          "font_descriptor": "{\"font_descriptor\": \"large-label\"}"
        },
        {
          "class": "LLMAgentChat",
          "uid": "44e826ac-8877-4e50-a385-f6b74d4a9e9b",
          "bounding_rect": [
            0,
            118,
            608,
            456
          ],
          "layout": "ColumnLayout",
          "name": "",
          "inset": [
            2,
            2
          ],
          "children": [
            {
              "class": "Label",
              "uid": "7f398379-1630-435f-a031-96aa7f40bac7",
              "bounding_rect": [
                0,
                0,
                600,
                20
              ],
              "text": "Agent Chat",
              "font_descriptor": "{\"font_descriptor\": \"default\"}"
            },
            {
              "class": "ChatMessageUI",
              "uid": "bbcd9b6e-6709-4462-984c-d2d338bb8fad",
              "bounding_rect": [
                0,
                20,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "852ec0b2-7a0a-4067-8d57-91a227ab8180",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "User",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "31394c76-cd7c-4586-8c56-8624c4c0f6c4",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "What time is it?"
                }
              ]
            },
            {
              "class": "ChatMessageUI",
              "uid": "eb200246-cd8c-4b0a-be13-2eb8e70a6242",
              "bounding_rect": [
                0,
                164,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "39bf9ab2-012d-4cdd-b775-2f1f74ecbdb7",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "Answer",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "88b14df8-3b7d-49f2-b967-2db14043f2af",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "Hello Jaba,\n\nBased on the contextual information provided, the current local time for your \ntimezone (America/Toronto) when you sent this message was 12:18 PM on February 17, \n2024. Keep in mind that I'm providing you with the time at the moment of your \nmessage's timestamp. If you still need the current time, please check your device\u2019s \nclock, as the time now could be different from when you initially messaged."
                }
              ]
            },
            {
              "class": "ChatMessageUI",
              "uid": "2710b6a8-39c7-4f63-8252-63711cf13fd3",
              "bounding_rect": [
                0,
                308,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "df6f99e5-e318-42a3-a155-58e7d018a69b",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "User",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "473a78d4-8f7a-4e2c-85a9-f9f46b2ff94d",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "retrieve_memories_by_similarity:\n\nWho or what are you?"
                }
              ]
            }
          ]
        },
        {
          "class": "TextArea",
          "uid": "8f270621-1958-40e1-9d5c-0491ee7542e8",
          "bounding_rect": [
            185,
            0,
            240,
            100
          ],
          "text": "Stuff EventStream into context of\nrequests"
        },
        {
          "class": "TextArea",
          "uid": "fb3cf901-16d3-4f32-af53-4e948d25e73e",
          "bounding_rect": [
            441,
            1,
            240,
            100
          ],
          "text": "Do mem sim retrieval on every user\nmessage?\n\n- what about on user actions?"
        },
        {
          "class": "LLMAgentChat",
          "uid": "da7adfad-78f7-4132-be9e-dca75dcc2c36",
          "bounding_rect": [
            631,
            119,
            608,
            600
          ],
          "layout": "ColumnLayout",
          "name": "",
          "inset": [
            2,
            2
          ],
          "children": [
            {
              "class": "Label",
              "uid": "e4276658-f398-4a04-b63e-846d56f42609",
              "bounding_rect": [
                0,
                0,
                600,
                20
              ],
              "text": "Agent Chat",
              "font_descriptor": "{\"font_descriptor\": \"default\"}"
            },
            {
              "class": "ChatMessageUI",
              "uid": "4b669a7c-d35d-49dd-bcfb-d9d4ee816510",
              "bounding_rect": [
                0,
                20,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "78e92772-2cbb-45d2-8b37-4ec21f82335b",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "User",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "9aefff62-3639-4e71-b0c4-8a15640ec485",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "store_info_chunk:\n\nIn computer science, a type signature or type annotation defines the inputs and outputs of a function, subroutine or method. A type signature includes the number, types, and order of the function's arguments. One important use of a type signature is for function overload resolution, where one particular definition of a function to be called is selected among many overloaded forms."
                }
              ]
            },
            {
              "class": "ChatMessageUI",
              "uid": "fa12e585-1086-41f3-af81-44218b62b049",
              "bounding_rect": [
                0,
                164,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "642b4056-0987-4cb6-807d-6f299da1c112",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "Answer",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "1a5c3d87-f9bc-4cb7-bda6-11ca6d9650f9",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "Stored info chunk with uid: 045c67f2-82d6-40a3-92bc-22964ffc9dd4"
                }
              ]
            },
            {
              "class": "ChatMessageUI",
              "uid": "657dd6ea-8729-43d1-b678-a0aa9a8c35bf",
              "bounding_rect": [
                0,
                308,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "b9703a83-8dc8-4b25-ae6e-e4580056ef86",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "User",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "c4899be0-ff9c-4ac1-a1c3-8d7cfb692a79",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "retrieve_memories_by_similarity:\n\ntype signature"
                }
              ]
            },
            {
              "class": "ChatMessageUI",
              "uid": "04a53827-9a83-47e0-8ed8-caa6ebd9ce0a",
              "bounding_rect": [
                0,
                452,
                604,
                144
              ],
              "layout": "ColumnLayout",
              "name": "",
              "inset": [
                2,
                2
              ],
              "children": [
                {
                  "class": "Label",
                  "uid": "4dcb3e33-8053-4f29-a2f5-b1695e161841",
                  "bounding_rect": [
                    0,
                    0,
                    600,
                    20
                  ],
                  "text": "Answer",
                  "font_descriptor": "{\"font_descriptor\": \"default\"}"
                },
                {
                  "class": "TextArea",
                  "uid": "83a63202-bcd3-46d7-a513-0aa76645c083",
                  "bounding_rect": [
                    0,
                    20,
                    600,
                    120
                  ],
                  "text": "0.524: Understanding the role of type signatures in defining function inputs, outputs, and their use in function overload resolution in computer science.\n0.423: Ensuring compatibility between modified function signatures and call sites, and verifying correct usage of function calls and results in program source code.\n0.158: Overview of text modification through deletion, insertion, and substitution as primary operations, including their interrelationships.\n0.112: Modification of source code requires ensuring consistency across potentially cascading changes in multiple files.\n"
                }
              ]
            }
          ]
        }
      ]
    }
  },
  "viewport_bookmarks": {},
  "viewport_pos": [
    1,
    -95
  ]
}